// üß† ULTRATHINK: Ïã§Ï†ú ÌïôÏÉù Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
const db = require('./config/database');

async function checkStudents() {
  console.log('='.repeat(60));
  console.log('üîç CHECKING STUDENT DATA');
  console.log('='.repeat(60));
  
  try {
    // 1. Î™®Îì† ÌïôÏÉù Ï°∞Ìöå (ÎèôÏ†ÅÏúºÎ°ú ÌïÑÎìú ÌôïÏù∏)
    const allStudents = await db('students')
      .select('student_id', 'student_code', 'name_korean', 'name_vietnamese', 'created_at')
      .orderBy('student_id', 'asc');
    
    console.log('\nüìã All Students:');
    allStudents.forEach(s => {
      console.log(`  - ID: ${s.student_id}, Code: ${s.student_code}, Name: ${s.name_korean || s.name_vietnamese || 'NO NAME'}, Created: ${s.created_at}`);
    });
    
    // 2. ÏÉÅÎã¥ Í∏∞Î°ù ÌôïÏù∏
    const consultations = await db('consultations')
      .select('consultation_id', 'student_id', 'consultation_date')
      .orderBy('consultation_date', 'desc')
      .limit(10);
    
    console.log('\nüìù Recent Consultations:');
    consultations.forEach(c => {
      console.log(`  - ID: ${c.consultation_id}, Student ID: ${c.student_id}, Date: ${c.consultation_date}`);
    });
    
    // 3. student_id Îß§Ìïë Î¨∏Ï†ú ÌôïÏù∏
    const orphanConsultations = await db('consultations as c')
      .leftJoin('students as s', 'c.student_id', 's.student_id')
      .whereNull('s.student_id')
      .select('c.consultation_id', 'c.student_id')
      .limit(10);
    
    if (orphanConsultations.length > 0) {
      console.log('\n‚ö†Ô∏è Consultations with non-existent students:');
      orphanConsultations.forEach(c => {
        console.log(`  - Consultation ${c.consultation_id} references non-existent student ${c.student_id}`);
      });
    }
    
    // 4. Ïª¨Îüº ÌôïÏù∏
    const columns = await db.raw(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'students' 
      AND column_name LIKE 'name%'
      ORDER BY column_name
    `);
    
    console.log('\nüìä Student table name columns:');
    columns.rows.forEach(col => {
      console.log(`  - ${col.column_name}`);
    });
    
    console.log('\n' + '='.repeat(60));
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await db.destroy();
  }
}

checkStudents();